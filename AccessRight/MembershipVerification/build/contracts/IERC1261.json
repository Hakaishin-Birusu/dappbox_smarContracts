{
  "contractName": "IERC1261",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "attributeIndexes",
          "type": "uint256[]"
        }
      ],
      "name": "Assigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "Revoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "Forfeited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "attributeIndexes",
          "type": "uint256[]"
        }
      ],
      "name": "ApprovedMembership",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "RequestedMembership",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "attributeIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "prevValueIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "prevValue",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "modifiedValueIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "modifiedValue",
          "type": "bytes32"
        }
      ],
      "name": "ModifiedAttributes",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "bytes32"
        },
        {
          "name": "values",
          "type": "bytes32[]"
        }
      ],
      "name": "addAttributeSet",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_attributeIndex",
          "type": "uint256"
        },
        {
          "name": "_modifiedValueIndex",
          "type": "uint256"
        }
      ],
      "name": "modifyAttributeByIndex",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_attributeIndexes",
          "type": "uint256[]"
        }
      ],
      "name": "requestMembership",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "forfeitMembership",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "approveRequest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "discardRequest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_attributeIndexes",
          "type": "uint256[]"
        }
      ],
      "name": "assignTo",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        }
      ],
      "name": "revokeFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "isCurrentMember",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getAttributeExhaustiveCollection",
      "outputs": [
        {
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAllMembers",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentMemberCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAttributeNames",
      "outputs": [
        {
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "getAttributes",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_attributeIndex",
          "type": "uint256"
        }
      ],
      "name": "getAttributeByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.4.25;\n\n\n/// @title ERC-1261 MVT Standard\n/// @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1261.md\n///  The constructor should define the attribute set for this MVT.\n///  Note: the ERC-165 identifier for this interface is 0x1d8362cf.\ninterface IERC1261 {/* is ERC173, ERC165 */\n    /// @dev This emits when a token is assigned to a member.\n    event Assigned(address indexed _to, uint[] attributeIndexes);\n\n    /// @dev This emits when a membership is revoked.\n    event Revoked(address indexed _to);\n\n    /// @dev This emits when a user forfeits his membership\n    event Forfeited(address indexed _to);\n\n    /// @dev This emits when a membership request is accepted\n    event ApprovedMembership(address indexed _to, uint[] attributeIndexes);\n\n    /// @dev This emits when a membership is requested by an user\n    event RequestedMembership(address indexed _to);\n\n    /// @dev This emits when data of a member is modified. \n    ///  Doesn't emit when a new membership is created and data is assigned.\n    event ModifiedAttributes(address indexed _to, uint attributeIndex, uint prevValueIndex, bytes32 prevValue, uint modifiedValueIndex, bytes32 modifiedValue);\n\n    /// @notice Adds a new attribute (key, value) pair to the set of pre-existing attributes.\n    /// @dev Adds a new attribute at the end of the array of attributes and maps it to `values`.\n    ///  Contract can set a max number of attributes and throw if limit is reached.\n    /// @param _name Name of the attribute which is to be added.\n    /// @param values List of values of the specified attribute.\n    function addAttributeSet(bytes32 _name, bytes32[] values) external;\n    \n    /// @notice Modifies the attribute value of a specific attribute for a given `_to` address.\n    /// @dev Use appropriate checks for whether a user/admin can modify the data.\n    ///  Best practice is to use onlyOwner modifier from ERC173.\n    /// @param _to The address whose attribute is being modified.\n    /// @param _attributeIndex The index of attribute which is being modified.\n    /// @param _modifiedValueIndex The index of the new value which is being assigned to the user attribute.\n    function modifyAttributeByIndex(address _to, uint _attributeIndex, uint _modifiedValueIndex) external;\n\n    /// @notice Requests membership from any address.\n    /// @dev Throws if the `msg.sender` already has the token.\n    ///  The individual `msg.sender` can request for a membership if some exisiting criteria are satisfied.\n    ///  When a membership is requested, this function emits the RequestedMembership event.\n    ///  dev can store the membership request and use `approveRequest` to assign memebership later\n    ///  dev can also oraclize the request to assign membership later\n    /// @param _attributeIndexes the attribute data associated with the member.\n    ///  This is an array which contains indexes of attributes.\n    function requestMembership(uint[] _attributeIndexes) external payable;\n\n    /// @notice User can forfeit his membership.\n    /// @dev Throws if the `msg.sender` already doesn't have the token.\n    ///  The individual `msg.sender` can revoke his/her membership.\n    ///  When the token is revoked, this function emits the Revoked event.\n    function forfeitMembership() external payable;\n\n    /// @notice Owner approves membership from any address.\n    /// @dev Throws if the `_user` doesn't have a pending request.\n    ///  Throws if the `msg.sender` is not an owner.\n    ///  Approves the pending request\n    ///  Make oraclize callback call this function\n    ///  When the token is assigned, this function emits the `ApprovedMembership` and `Assigned` events.\n    /// @param _user the user whose membership request will be approved.\n    function approveRequest(address _user) external;\n\n    /// @notice Owner discards membership from any address.\n    /// @dev Throws if the `_user` doesn't have a pending request.\n    ///  Throws if the `msg.sender` is not an owner.\n    ///  Discards the pending request\n    ///  Make oraclize callback call this function if criteria are not satisfied\n    /// @param _user the user whose membership request will be discarded.\n    function discardRequest(address _user) external;\n\n    /// @notice Assigns membership of an MVT from owner address to another address.\n    /// @dev Throws if the member already has the token.\n    ///  Throws if `_to` is the zero address.\n    ///  Throws if the `msg.sender` is not an owner.\n    ///  The entity assigns the membership to each individual.\n    ///  When the token is assigned, this function emits the Assigned event.\n    /// @param _to The address to which the token is assigned.\n    /// @param _attributeIndexes The attribute data associated with the member.\n    ///  This is an array which contains indexes of attributes.\n    function assignTo(address _to, uint[] _attributeIndexes) external;\n\n    /// @notice Only Owner can revoke the membership.\n    /// @dev This removes the membership of the user.\n    ///  Throws if the `_from` is not an owner of the token.\n    ///  Throws if the `msg.sender` is not an owner.\n    ///  Throws if `_from` is the zero address.\n    ///  When transaction is complete, this function emits the Revoked event.\n    /// @param _from The current owner of the MVT.\n    function revokeFrom(address _from) external;\n    \n    /// @notice Queries whether a member is a current member of the organization.\n    /// @dev MVT's assigned to the zero address are considered invalid, and this\n    ///  function throws for queries about the zero address.\n    /// @param _to An address for whom to query the membership.\n    /// @return Whether the member owns the token.\n    function isCurrentMember(address _to) external view returns (bool);\n\n     /// @notice Gets the value collection of an attribute.\n    /// @dev Returns the values of attributes as a bytes32 array.\n    /// @param _index Index of the attribute whose values are to be fetched\n    /// @return The values of attributes.\n    function getAttributeExhaustiveCollection(uint _index) external view returns (bytes32[]);\n\n    /// @notice Returns the list of all past and present members.\n    /// @dev Use this function along with isCurrentMember to find wasMemberOf() in Js.\n    ///  It can be calculated as present in getAllMembers() and !isCurrentMember().\n    /// @return List of addresses who have owned the token and currently own the token.\n    function getAllMembers() external view returns (address[]);\n\n    /// @notice Returns the count of all current members.\n    /// @dev Use this function in polls as denominator to get percentage of members voted.\n    /// @return Count of current Members.\n    function getCurrentMemberCount() external view returns (uint);\n\n    /// @notice Returns the list of all attribute names.\n    /// @dev Returns the names of attributes as a bytes32 array. \n    ///  AttributeNames are stored in a bytes32 Array.\n    ///  Possible values for each attributeName are stored in a mapping(attributeName => attributeValues).\n    ///  AttributeName is bytes32 and attributeValues is bytes32[].\n    ///  Attributes of a particular user are stored in bytes32[].\n    ///  Which has a single attributeValue for each attributeName in an array.\n    ///  Use web3.toAscii(data[0]).replace(/\\u0000/g, \"\") to convert to string in JS.\n    /// @return The names of attributes.\n    function getAttributeNames() external view returns (bytes32[]);\n\n    /// @notice Returns the attributes of `_to` address.\n    /// @dev Throws if `_to` is the zero address.\n    ///  Use web3.toAscii(data[0]).replace(/\\u0000/g, \"\") to convert to string in JS.\n    /// @param _to The address whose current attributes are to be returned.\n    /// @return The attributes associated with `_to` address.\n    function getAttributes(address _to) external view returns (uint[]);\n\n    /// @notice Returns the `attribute` stored against `_to` address.\n    /// @dev Finds the index of the `attribute`.\n    ///  Throws if the attribute is not present in the predefined attributes.\n    ///  Returns the attributeValue for the specified `attribute`.\n    /// @param _to The address whose attribute is requested.\n    /// @param _attributeIndex The attribute Index which is required.\n    /// @return The attribute value at the specified name.\n    function getAttributeByIndex(address _to, uint _attributeIndex) external view returns (uint);    \n}\n\n\n/// @title ERC-1261 Membership Verification Token Standard, optional metadata extension\n/// @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1261.md\n///  Note: the ERC-1261 identifier for this interface is 0x93254542.\ninterface IERC1261Metadata {/* is ERC1261 */\n    /// @notice A descriptive name for a collection of MTs in this contract.\n    function name() external view returns (bytes32);\n\n    /// @notice An abbreviated name for MTs in this contract.\n    function symbol() external view returns (bytes32);\n}",
  "sourcePath": "/home/sagar/Desktop/membership contract/git eg/MembershipVerificationToken/contracts/Protocol/IERC1261.sol",
  "ast": {
    "absolutePath": "/home/sagar/Desktop/membership contract/git eg/MembershipVerificationToken/contracts/Protocol/IERC1261.sol",
    "exportedSymbols": {
      "IERC1261": [
        906
      ],
      "IERC1261Metadata": [
        917
      ]
    },
    "id": 918,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 767,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title ERC-1261 MVT Standard\n @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1261.md\n  The constructor should define the attribute set for this MVT.\n  Note: the ERC-165 identifier for this interface is 0x1d8362cf.",
        "fullyImplemented": false,
        "id": 906,
        "linearizedBaseContracts": [
          906
        ],
        "name": "IERC1261",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@dev This emits when a token is assigned to a member.",
            "id": 774,
            "name": "Assigned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 769,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "395:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "395:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 772,
                  "indexed": false,
                  "name": "attributeIndexes",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "416:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 770,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "416:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 771,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "416:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "394:46:4"
            },
            "src": "380:61:4"
          },
          {
            "anonymous": false,
            "documentation": "@dev This emits when a membership is revoked.",
            "id": 778,
            "name": "Revoked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 776,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "515:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "515:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "514:21:4"
            },
            "src": "501:35:4"
          },
          {
            "anonymous": false,
            "documentation": "@dev This emits when a user forfeits his membership",
            "id": 782,
            "name": "Forfeited",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 780,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 782,
                  "src": "618:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "618:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "617:21:4"
            },
            "src": "602:37:4"
          },
          {
            "anonymous": false,
            "documentation": "@dev This emits when a membership request is accepted",
            "id": 789,
            "name": "ApprovedMembership",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 784,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 789,
                  "src": "732:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "732:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 787,
                  "indexed": false,
                  "name": "attributeIndexes",
                  "nodeType": "VariableDeclaration",
                  "scope": 789,
                  "src": "753:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 785,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "753:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 786,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "753:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "731:46:4"
            },
            "src": "707:71:4"
          },
          {
            "anonymous": false,
            "documentation": "@dev This emits when a membership is requested by an user",
            "id": 793,
            "name": "RequestedMembership",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 791,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "876:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "875:21:4"
            },
            "src": "850:47:4"
          },
          {
            "anonymous": false,
            "documentation": "@dev This emits when data of a member is modified. \n  Doesn't emit when a new membership is created and data is assigned.",
            "id": 807,
            "name": "ModifiedAttributes",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 795,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 807,
                  "src": "1065:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 794,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1065:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 797,
                  "indexed": false,
                  "name": "attributeIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 807,
                  "src": "1086:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1086:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 799,
                  "indexed": false,
                  "name": "prevValueIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 807,
                  "src": "1107:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 801,
                  "indexed": false,
                  "name": "prevValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 807,
                  "src": "1128:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 800,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1128:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 803,
                  "indexed": false,
                  "name": "modifiedValueIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 807,
                  "src": "1147:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 802,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1147:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 805,
                  "indexed": false,
                  "name": "modifiedValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 807,
                  "src": "1172:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 804,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1172:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1064:130:4"
            },
            "src": "1040:155:4"
          },
          {
            "body": null,
            "documentation": "@notice Adds a new attribute (key, value) pair to the set of pre-existing attributes.\n @dev Adds a new attribute at the end of the array of attributes and maps it to `values`.\n  Contract can set a max number of attributes and throw if limit is reached.\n @param _name Name of the attribute which is to be added.\n @param values List of values of the specified attribute.",
            "id": 815,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addAttributeSet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 809,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 815,
                  "src": "1631:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 808,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1631:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 812,
                  "name": "values",
                  "nodeType": "VariableDeclaration",
                  "scope": 815,
                  "src": "1646:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 810,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1646:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 811,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1646:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1630:33:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1672:0:4"
            },
            "scope": 906,
            "src": "1606:67:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Modifies the attribute value of a specific attribute for a given `_to` address.\n @dev Use appropriate checks for whether a user/admin can modify the data.\n  Best practice is to use onlyOwner modifier from ERC173.\n @param _to The address whose attribute is being modified.\n @param _attributeIndex The index of attribute which is being modified.\n @param _modifiedValueIndex The index of the new value which is being assigned to the user attribute.",
            "id": 824,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "modifyAttributeByIndex",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 817,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 824,
                  "src": "2212:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2212:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 819,
                  "name": "_attributeIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 824,
                  "src": "2225:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 818,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2225:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 821,
                  "name": "_modifiedValueIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 824,
                  "src": "2247:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 820,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2247:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2211:61:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2281:0:4"
            },
            "scope": 906,
            "src": "2180:102:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Requests membership from any address.\n @dev Throws if the `msg.sender` already has the token.\n  The individual `msg.sender` can request for a membership if some exisiting criteria are satisfied.\n  When a membership is requested, this function emits the RequestedMembership event.\n  dev can store the membership request and use `approveRequest` to assign memebership later\n  dev can also oraclize the request to assign membership later\n @param _attributeIndexes the attribute data associated with the member.\n  This is an array which contains indexes of attributes.",
            "id": 830,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "requestMembership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 827,
                  "name": "_attributeIndexes",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "2945:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 825,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2945:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 826,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2945:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2944:26:4"
            },
            "payable": true,
            "returnParameters": {
              "id": 829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2987:0:4"
            },
            "scope": 906,
            "src": "2918:70:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice User can forfeit his membership.\n @dev Throws if the `msg.sender` already doesn't have the token.\n  The individual `msg.sender` can revoke his/her membership.\n  When the token is revoked, this function emits the Revoked event.",
            "id": 833,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "forfeitMembership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3284:2:4"
            },
            "payable": true,
            "returnParameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3303:0:4"
            },
            "scope": 906,
            "src": "3258:46:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Owner approves membership from any address.\n @dev Throws if the `_user` doesn't have a pending request.\n  Throws if the `msg.sender` is not an owner.\n  Approves the pending request\n  Make oraclize callback call this function\n  When the token is assigned, this function emits the `ApprovedMembership` and `Assigned` events.\n @param _user the user whose membership request will be approved.",
            "id": 838,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "approveRequest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 835,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "3781:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3781:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3780:15:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3804:0:4"
            },
            "scope": 906,
            "src": "3757:48:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Owner discards membership from any address.\n @dev Throws if the `_user` doesn't have a pending request.\n  Throws if the `msg.sender` is not an owner.\n  Discards the pending request\n  Make oraclize callback call this function if criteria are not satisfied\n @param _user the user whose membership request will be discarded.",
            "id": 843,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "discardRequest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 840,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 843,
                  "src": "4208:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4208:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4207:15:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4231:0:4"
            },
            "scope": 906,
            "src": "4184:48:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Assigns membership of an MVT from owner address to another address.\n @dev Throws if the member already has the token.\n  Throws if `_to` is the zero address.\n  Throws if the `msg.sender` is not an owner.\n  The entity assigns the membership to each individual.\n  When the token is assigned, this function emits the Assigned event.\n @param _to The address to which the token is assigned.\n @param _attributeIndexes The attribute data associated with the member.\n  This is an array which contains indexes of attributes.",
            "id": 851,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "assignTo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 845,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "4843:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4843:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 848,
                  "name": "_attributeIndexes",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "4856:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 846,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "4856:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 847,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4856:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4842:39:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4890:0:4"
            },
            "scope": 906,
            "src": "4825:66:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Only Owner can revoke the membership.\n @dev This removes the membership of the user.\n  Throws if the `_from` is not an owner of the token.\n  Throws if the `msg.sender` is not an owner.\n  Throws if `_from` is the zero address.\n  When transaction is complete, this function emits the Revoked event.\n @param _from The current owner of the MVT.",
            "id": 856,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "revokeFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 853,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "5316:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5316:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5315:15:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5339:0:4"
            },
            "scope": 906,
            "src": "5296:44:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Queries whether a member is a current member of the organization.\n @dev MVT's assigned to the zero address are considered invalid, and this\n  function throws for queries about the zero address.\n @param _to An address for whom to query the membership.\n @return Whether the member owns the token.",
            "id": 863,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isCurrentMember",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 858,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 863,
                  "src": "5714:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5714:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5713:13:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 861,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 863,
                  "src": "5750:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 860,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5750:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5749:6:4"
            },
            "scope": 906,
            "src": "5689:67:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Gets the value collection of an attribute.\n @dev Returns the values of attributes as a bytes32 array.\n @param _index Index of the attribute whose values are to be fetched\n @return The values of attributes.",
            "id": 871,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getAttributeExhaustiveCollection",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 865,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "6048:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 864,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6048:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6047:13:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 869,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "6084:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 867,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6084:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 868,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6084:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6083:11:4"
            },
            "scope": 906,
            "src": "6006:89:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns the list of all past and present members.\n @dev Use this function along with isCurrentMember to find wasMemberOf() in Js.\n  It can be calculated as present in getAllMembers() and !isCurrentMember().\n @return List of addresses who have owned the token and currently own the token.",
            "id": 877,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getAllMembers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6448:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 875,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 877,
                  "src": "6474:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 873,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6474:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 874,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6474:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6473:11:4"
            },
            "scope": 906,
            "src": "6426:59:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns the count of all current members.\n @dev Use this function in polls as denominator to get percentage of members voted.\n @return Count of current Members.",
            "id": 882,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getCurrentMemberCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6712:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 880,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 882,
                  "src": "6738:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 879,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6738:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6737:6:4"
            },
            "scope": 906,
            "src": "6682:62:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns the list of all attribute names.\n @dev Returns the names of attributes as a bytes32 array. \n  AttributeNames are stored in a bytes32 Array.\n  Possible values for each attributeName are stored in a mapping(attributeName => attributeValues).\n  AttributeName is bytes32 and attributeValues is bytes32[].\n  Attributes of a particular user are stored in bytes32[].\n  Which has a single attributeValue for each attributeName in an array.\n  Use web3.toAscii(data[0]).replace(/\\u0000/g, \"\") to convert to string in JS.\n @return The names of attributes.",
            "id": 888,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getAttributeNames",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7401:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 886,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "7427:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 884,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "7427:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 885,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "7427:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7426:11:4"
            },
            "scope": 906,
            "src": "7375:63:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns the attributes of `_to` address.\n @dev Throws if `_to` is the zero address.\n  Use web3.toAscii(data[0]).replace(/\\u0000/g, \"\") to convert to string in JS.\n @param _to The address whose current attributes are to be returned.\n @return The attributes associated with `_to` address.",
            "id": 896,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getAttributes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 890,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "7798:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7798:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7797:13:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 894,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "7834:6:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 892,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "7834:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 893,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "7834:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7833:8:4"
            },
            "scope": 906,
            "src": "7775:67:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns the `attribute` stored against `_to` address.\n @dev Finds the index of the `attribute`.\n  Throws if the attribute is not present in the predefined attributes.\n  Returns the attributeValue for the specified `attribute`.\n @param _to The address whose attribute is requested.\n @param _attributeIndex The attribute Index which is required.\n @return The attribute value at the specified name.",
            "id": 905,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getAttributeByIndex",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 898,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "8331:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 897,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8331:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 900,
                  "name": "_attributeIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "8344:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 899,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8344:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8330:35:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 903,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "8389:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 902,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8389:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8388:6:4"
            },
            "scope": 906,
            "src": "8302:93:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 918,
        "src": "270:8131:4"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title ERC-1261 Membership Verification Token Standard, optional metadata extension\n @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1261.md\n  Note: the ERC-1261 identifier for this interface is 0x93254542.",
        "fullyImplemented": false,
        "id": 917,
        "linearizedBaseContracts": [
          917
        ],
        "name": "IERC1261Metadata",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice A descriptive name for a collection of MTs in this contract.",
            "id": 911,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8775:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 909,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "8801:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 908,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8801:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8800:9:4"
            },
            "scope": 917,
            "src": "8762:48:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice An abbreviated name for MTs in this contract.",
            "id": 916,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8893:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 914,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 916,
                  "src": "8919:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 913,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8919:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8918:9:4"
            },
            "scope": 917,
            "src": "8878:50:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 918,
        "src": "8636:294:4"
      }
    ],
    "src": "0:8930:4"
  },
  "legacyAST": {
    "absolutePath": "/home/sagar/Desktop/membership contract/git eg/MembershipVerificationToken/contracts/Protocol/IERC1261.sol",
    "exportedSymbols": {
      "IERC1261": [
        906
      ],
      "IERC1261Metadata": [
        917
      ]
    },
    "id": 918,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 767,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title ERC-1261 MVT Standard\n @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1261.md\n  The constructor should define the attribute set for this MVT.\n  Note: the ERC-165 identifier for this interface is 0x1d8362cf.",
        "fullyImplemented": false,
        "id": 906,
        "linearizedBaseContracts": [
          906
        ],
        "name": "IERC1261",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@dev This emits when a token is assigned to a member.",
            "id": 774,
            "name": "Assigned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 769,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "395:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "395:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 772,
                  "indexed": false,
                  "name": "attributeIndexes",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "416:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 770,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "416:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 771,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "416:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "394:46:4"
            },
            "src": "380:61:4"
          },
          {
            "anonymous": false,
            "documentation": "@dev This emits when a membership is revoked.",
            "id": 778,
            "name": "Revoked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 776,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "515:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "515:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "514:21:4"
            },
            "src": "501:35:4"
          },
          {
            "anonymous": false,
            "documentation": "@dev This emits when a user forfeits his membership",
            "id": 782,
            "name": "Forfeited",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 780,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 782,
                  "src": "618:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "618:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "617:21:4"
            },
            "src": "602:37:4"
          },
          {
            "anonymous": false,
            "documentation": "@dev This emits when a membership request is accepted",
            "id": 789,
            "name": "ApprovedMembership",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 784,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 789,
                  "src": "732:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "732:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 787,
                  "indexed": false,
                  "name": "attributeIndexes",
                  "nodeType": "VariableDeclaration",
                  "scope": 789,
                  "src": "753:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 785,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "753:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 786,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "753:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "731:46:4"
            },
            "src": "707:71:4"
          },
          {
            "anonymous": false,
            "documentation": "@dev This emits when a membership is requested by an user",
            "id": 793,
            "name": "RequestedMembership",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 791,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "876:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "875:21:4"
            },
            "src": "850:47:4"
          },
          {
            "anonymous": false,
            "documentation": "@dev This emits when data of a member is modified. \n  Doesn't emit when a new membership is created and data is assigned.",
            "id": 807,
            "name": "ModifiedAttributes",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 795,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 807,
                  "src": "1065:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 794,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1065:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 797,
                  "indexed": false,
                  "name": "attributeIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 807,
                  "src": "1086:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1086:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 799,
                  "indexed": false,
                  "name": "prevValueIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 807,
                  "src": "1107:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 801,
                  "indexed": false,
                  "name": "prevValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 807,
                  "src": "1128:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 800,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1128:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 803,
                  "indexed": false,
                  "name": "modifiedValueIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 807,
                  "src": "1147:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 802,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1147:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 805,
                  "indexed": false,
                  "name": "modifiedValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 807,
                  "src": "1172:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 804,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1172:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1064:130:4"
            },
            "src": "1040:155:4"
          },
          {
            "body": null,
            "documentation": "@notice Adds a new attribute (key, value) pair to the set of pre-existing attributes.\n @dev Adds a new attribute at the end of the array of attributes and maps it to `values`.\n  Contract can set a max number of attributes and throw if limit is reached.\n @param _name Name of the attribute which is to be added.\n @param values List of values of the specified attribute.",
            "id": 815,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addAttributeSet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 809,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 815,
                  "src": "1631:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 808,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1631:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 812,
                  "name": "values",
                  "nodeType": "VariableDeclaration",
                  "scope": 815,
                  "src": "1646:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 810,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1646:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 811,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1646:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1630:33:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1672:0:4"
            },
            "scope": 906,
            "src": "1606:67:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Modifies the attribute value of a specific attribute for a given `_to` address.\n @dev Use appropriate checks for whether a user/admin can modify the data.\n  Best practice is to use onlyOwner modifier from ERC173.\n @param _to The address whose attribute is being modified.\n @param _attributeIndex The index of attribute which is being modified.\n @param _modifiedValueIndex The index of the new value which is being assigned to the user attribute.",
            "id": 824,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "modifyAttributeByIndex",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 817,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 824,
                  "src": "2212:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2212:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 819,
                  "name": "_attributeIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 824,
                  "src": "2225:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 818,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2225:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 821,
                  "name": "_modifiedValueIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 824,
                  "src": "2247:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 820,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2247:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2211:61:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2281:0:4"
            },
            "scope": 906,
            "src": "2180:102:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Requests membership from any address.\n @dev Throws if the `msg.sender` already has the token.\n  The individual `msg.sender` can request for a membership if some exisiting criteria are satisfied.\n  When a membership is requested, this function emits the RequestedMembership event.\n  dev can store the membership request and use `approveRequest` to assign memebership later\n  dev can also oraclize the request to assign membership later\n @param _attributeIndexes the attribute data associated with the member.\n  This is an array which contains indexes of attributes.",
            "id": 830,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "requestMembership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 827,
                  "name": "_attributeIndexes",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "2945:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 825,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2945:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 826,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2945:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2944:26:4"
            },
            "payable": true,
            "returnParameters": {
              "id": 829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2987:0:4"
            },
            "scope": 906,
            "src": "2918:70:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice User can forfeit his membership.\n @dev Throws if the `msg.sender` already doesn't have the token.\n  The individual `msg.sender` can revoke his/her membership.\n  When the token is revoked, this function emits the Revoked event.",
            "id": 833,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "forfeitMembership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3284:2:4"
            },
            "payable": true,
            "returnParameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3303:0:4"
            },
            "scope": 906,
            "src": "3258:46:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Owner approves membership from any address.\n @dev Throws if the `_user` doesn't have a pending request.\n  Throws if the `msg.sender` is not an owner.\n  Approves the pending request\n  Make oraclize callback call this function\n  When the token is assigned, this function emits the `ApprovedMembership` and `Assigned` events.\n @param _user the user whose membership request will be approved.",
            "id": 838,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "approveRequest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 835,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "3781:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3781:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3780:15:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3804:0:4"
            },
            "scope": 906,
            "src": "3757:48:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Owner discards membership from any address.\n @dev Throws if the `_user` doesn't have a pending request.\n  Throws if the `msg.sender` is not an owner.\n  Discards the pending request\n  Make oraclize callback call this function if criteria are not satisfied\n @param _user the user whose membership request will be discarded.",
            "id": 843,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "discardRequest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 840,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 843,
                  "src": "4208:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4208:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4207:15:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4231:0:4"
            },
            "scope": 906,
            "src": "4184:48:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Assigns membership of an MVT from owner address to another address.\n @dev Throws if the member already has the token.\n  Throws if `_to` is the zero address.\n  Throws if the `msg.sender` is not an owner.\n  The entity assigns the membership to each individual.\n  When the token is assigned, this function emits the Assigned event.\n @param _to The address to which the token is assigned.\n @param _attributeIndexes The attribute data associated with the member.\n  This is an array which contains indexes of attributes.",
            "id": 851,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "assignTo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 845,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "4843:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4843:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 848,
                  "name": "_attributeIndexes",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "4856:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 846,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "4856:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 847,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4856:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4842:39:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4890:0:4"
            },
            "scope": 906,
            "src": "4825:66:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Only Owner can revoke the membership.\n @dev This removes the membership of the user.\n  Throws if the `_from` is not an owner of the token.\n  Throws if the `msg.sender` is not an owner.\n  Throws if `_from` is the zero address.\n  When transaction is complete, this function emits the Revoked event.\n @param _from The current owner of the MVT.",
            "id": 856,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "revokeFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 853,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "5316:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5316:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5315:15:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5339:0:4"
            },
            "scope": 906,
            "src": "5296:44:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Queries whether a member is a current member of the organization.\n @dev MVT's assigned to the zero address are considered invalid, and this\n  function throws for queries about the zero address.\n @param _to An address for whom to query the membership.\n @return Whether the member owns the token.",
            "id": 863,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isCurrentMember",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 858,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 863,
                  "src": "5714:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5714:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5713:13:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 861,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 863,
                  "src": "5750:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 860,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5750:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5749:6:4"
            },
            "scope": 906,
            "src": "5689:67:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Gets the value collection of an attribute.\n @dev Returns the values of attributes as a bytes32 array.\n @param _index Index of the attribute whose values are to be fetched\n @return The values of attributes.",
            "id": 871,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getAttributeExhaustiveCollection",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 865,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "6048:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 864,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6048:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6047:13:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 869,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "6084:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 867,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6084:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 868,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6084:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6083:11:4"
            },
            "scope": 906,
            "src": "6006:89:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns the list of all past and present members.\n @dev Use this function along with isCurrentMember to find wasMemberOf() in Js.\n  It can be calculated as present in getAllMembers() and !isCurrentMember().\n @return List of addresses who have owned the token and currently own the token.",
            "id": 877,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getAllMembers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6448:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 875,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 877,
                  "src": "6474:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 873,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6474:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 874,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6474:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6473:11:4"
            },
            "scope": 906,
            "src": "6426:59:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns the count of all current members.\n @dev Use this function in polls as denominator to get percentage of members voted.\n @return Count of current Members.",
            "id": 882,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getCurrentMemberCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6712:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 880,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 882,
                  "src": "6738:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 879,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6738:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6737:6:4"
            },
            "scope": 906,
            "src": "6682:62:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns the list of all attribute names.\n @dev Returns the names of attributes as a bytes32 array. \n  AttributeNames are stored in a bytes32 Array.\n  Possible values for each attributeName are stored in a mapping(attributeName => attributeValues).\n  AttributeName is bytes32 and attributeValues is bytes32[].\n  Attributes of a particular user are stored in bytes32[].\n  Which has a single attributeValue for each attributeName in an array.\n  Use web3.toAscii(data[0]).replace(/\\u0000/g, \"\") to convert to string in JS.\n @return The names of attributes.",
            "id": 888,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getAttributeNames",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7401:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 886,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "7427:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 884,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "7427:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 885,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "7427:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7426:11:4"
            },
            "scope": 906,
            "src": "7375:63:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns the attributes of `_to` address.\n @dev Throws if `_to` is the zero address.\n  Use web3.toAscii(data[0]).replace(/\\u0000/g, \"\") to convert to string in JS.\n @param _to The address whose current attributes are to be returned.\n @return The attributes associated with `_to` address.",
            "id": 896,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getAttributes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 890,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "7798:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7798:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7797:13:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 894,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "7834:6:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 892,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "7834:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 893,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "7834:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7833:8:4"
            },
            "scope": 906,
            "src": "7775:67:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns the `attribute` stored against `_to` address.\n @dev Finds the index of the `attribute`.\n  Throws if the attribute is not present in the predefined attributes.\n  Returns the attributeValue for the specified `attribute`.\n @param _to The address whose attribute is requested.\n @param _attributeIndex The attribute Index which is required.\n @return The attribute value at the specified name.",
            "id": 905,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getAttributeByIndex",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 898,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "8331:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 897,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8331:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 900,
                  "name": "_attributeIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "8344:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 899,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8344:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8330:35:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 903,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "8389:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 902,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8389:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8388:6:4"
            },
            "scope": 906,
            "src": "8302:93:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 918,
        "src": "270:8131:4"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title ERC-1261 Membership Verification Token Standard, optional metadata extension\n @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1261.md\n  Note: the ERC-1261 identifier for this interface is 0x93254542.",
        "fullyImplemented": false,
        "id": 917,
        "linearizedBaseContracts": [
          917
        ],
        "name": "IERC1261Metadata",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice A descriptive name for a collection of MTs in this contract.",
            "id": 911,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8775:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 909,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "8801:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 908,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8801:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8800:9:4"
            },
            "scope": 917,
            "src": "8762:48:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice An abbreviated name for MTs in this contract.",
            "id": 916,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8893:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 914,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 916,
                  "src": "8919:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 913,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8919:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8918:9:4"
            },
            "scope": 917,
            "src": "8878:50:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 918,
        "src": "8636:294:4"
      }
    ],
    "src": "0:8930:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-01-18T08:20:59.224Z",
  "devdoc": {
    "methods": {
      "addAttributeSet(bytes32,bytes32[])": {
        "details": "Adds a new attribute at the end of the array of attributes and maps it to `values`.  Contract can set a max number of attributes and throw if limit is reached.",
        "params": {
          "_name": "Name of the attribute which is to be added.",
          "values": "List of values of the specified attribute."
        }
      },
      "approveRequest(address)": {
        "details": "Throws if the `_user` doesn't have a pending request.  Throws if the `msg.sender` is not an owner.  Approves the pending request  Make oraclize callback call this function  When the token is assigned, this function emits the `ApprovedMembership` and `Assigned` events.",
        "params": {
          "_user": "the user whose membership request will be approved."
        }
      },
      "assignTo(address,uint256[])": {
        "details": "Throws if the member already has the token.  Throws if `_to` is the zero address.  Throws if the `msg.sender` is not an owner.  The entity assigns the membership to each individual.  When the token is assigned, this function emits the Assigned event.",
        "params": {
          "_attributeIndexes": "The attribute data associated with the member.  This is an array which contains indexes of attributes.",
          "_to": "The address to which the token is assigned."
        }
      },
      "discardRequest(address)": {
        "details": "Throws if the `_user` doesn't have a pending request.  Throws if the `msg.sender` is not an owner.  Discards the pending request  Make oraclize callback call this function if criteria are not satisfied",
        "params": {
          "_user": "the user whose membership request will be discarded."
        }
      },
      "forfeitMembership()": {
        "details": "Throws if the `msg.sender` already doesn't have the token.  The individual `msg.sender` can revoke his/her membership.  When the token is revoked, this function emits the Revoked event."
      },
      "getAllMembers()": {
        "details": "Use this function along with isCurrentMember to find wasMemberOf() in Js.  It can be calculated as present in getAllMembers() and !isCurrentMember().",
        "return": "List of addresses who have owned the token and currently own the token."
      },
      "getAttributeByIndex(address,uint256)": {
        "details": "Finds the index of the `attribute`.  Throws if the attribute is not present in the predefined attributes.  Returns the attributeValue for the specified `attribute`.",
        "params": {
          "_attributeIndex": "The attribute Index which is required.",
          "_to": "The address whose attribute is requested."
        },
        "return": "The attribute value at the specified name."
      },
      "getAttributeExhaustiveCollection(uint256)": {
        "details": "Returns the values of attributes as a bytes32 array.",
        "params": {
          "_index": "Index of the attribute whose values are to be fetched"
        },
        "return": "The values of attributes."
      },
      "getAttributeNames()": {
        "details": "Returns the names of attributes as a bytes32 array.   AttributeNames are stored in a bytes32 Array.  Possible values for each attributeName are stored in a mapping(attributeName => attributeValues).  AttributeName is bytes32 and attributeValues is bytes32[].  Attributes of a particular user are stored in bytes32[].  Which has a single attributeValue for each attributeName in an array.  Use web3.toAscii(data[0]).replace(/\\u0000/g, \"\") to convert to string in JS.",
        "return": "The names of attributes."
      },
      "getAttributes(address)": {
        "details": "Throws if `_to` is the zero address.  Use web3.toAscii(data[0]).replace(/\\u0000/g, \"\") to convert to string in JS.",
        "params": {
          "_to": "The address whose current attributes are to be returned."
        },
        "return": "The attributes associated with `_to` address."
      },
      "getCurrentMemberCount()": {
        "details": "Use this function in polls as denominator to get percentage of members voted.",
        "return": "Count of current Members."
      },
      "isCurrentMember(address)": {
        "details": "MVT's assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
        "params": {
          "_to": "An address for whom to query the membership."
        },
        "return": "Whether the member owns the token."
      },
      "modifyAttributeByIndex(address,uint256,uint256)": {
        "details": "Use appropriate checks for whether a user/admin can modify the data.  Best practice is to use onlyOwner modifier from ERC173.",
        "params": {
          "_attributeIndex": "The index of attribute which is being modified.",
          "_modifiedValueIndex": "The index of the new value which is being assigned to the user attribute.",
          "_to": "The address whose attribute is being modified."
        }
      },
      "requestMembership(uint256[])": {
        "details": "Throws if the `msg.sender` already has the token.  The individual `msg.sender` can request for a membership if some exisiting criteria are satisfied.  When a membership is requested, this function emits the RequestedMembership event.  dev can store the membership request and use `approveRequest` to assign memebership later  dev can also oraclize the request to assign membership later",
        "params": {
          "_attributeIndexes": "the attribute data associated with the member.  This is an array which contains indexes of attributes."
        }
      },
      "revokeFrom(address)": {
        "details": "This removes the membership of the user.  Throws if the `_from` is not an owner of the token.  Throws if the `msg.sender` is not an owner.  Throws if `_from` is the zero address.  When transaction is complete, this function emits the Revoked event.",
        "params": {
          "_from": "The current owner of the MVT."
        }
      }
    },
    "title": "ERC-1261 MVT Standard"
  },
  "userdoc": {
    "methods": {
      "addAttributeSet(bytes32,bytes32[])": {
        "notice": "Adds a new attribute (key, value) pair to the set of pre-existing attributes."
      },
      "approveRequest(address)": {
        "notice": "Owner approves membership from any address."
      },
      "assignTo(address,uint256[])": {
        "notice": "Assigns membership of an MVT from owner address to another address."
      },
      "discardRequest(address)": {
        "notice": "Owner discards membership from any address."
      },
      "forfeitMembership()": {
        "notice": "User can forfeit his membership."
      },
      "getAllMembers()": {
        "notice": "Returns the list of all past and present members."
      },
      "getAttributeByIndex(address,uint256)": {
        "notice": "Returns the `attribute` stored against `_to` address."
      },
      "getAttributeExhaustiveCollection(uint256)": {
        "notice": "Gets the value collection of an attribute."
      },
      "getAttributeNames()": {
        "notice": "Returns the list of all attribute names."
      },
      "getAttributes(address)": {
        "notice": "Returns the attributes of `_to` address."
      },
      "getCurrentMemberCount()": {
        "notice": "Returns the count of all current members."
      },
      "isCurrentMember(address)": {
        "notice": "Queries whether a member is a current member of the organization."
      },
      "modifyAttributeByIndex(address,uint256,uint256)": {
        "notice": "Modifies the attribute value of a specific attribute for a given `_to` address."
      },
      "requestMembership(uint256[])": {
        "notice": "Requests membership from any address."
      },
      "revokeFrom(address)": {
        "notice": "Only Owner can revoke the membership."
      }
    }
  }
}